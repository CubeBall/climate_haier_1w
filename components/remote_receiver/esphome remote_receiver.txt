# Example configuration entry
remote_receiver:
  pin: GPIO32
  dump: all

Configuration variables:
pin (Required, Pin): The pin to receive the remote signal on.
dump (Optional, list): Decode and dump these remote codes in the logs (at log.level=DEBUG). Set to all to dump all available codecs:

	nec: Decode and dump NEC infrared codes.

tolerance (Optional, int): The percentage that the remote signal lengths can deviate in the decoding process. Defaults to 25%.
buffer_size (Optional, int): The size of the internal buffer for storing the remote codes. Defaults to 10kB on the ESP32 and 1kB on the ESP8266.
memory_blocks (Optional, int): The number of RMT memory blocks used. Only used on ESP32 platform. Defaults to 3.
filter (Optional, Time): Filter any pulses that are shorter than this. Useful for removing glitches from noisy signals. Defaults to 50us.
idle (Optional, Time): The amount of time that a signal should remain stable (i.e. not change) for it to be considered complete. Defaults to 10ms.
id (Optional, ID): Manually specify the ID used for code generation. Use this if you have multiple remote receivers.


Binary Sensor
The remote_receiver binary sensor lets you track when a button on a remote control is pressed.

Each time the pre-defined signal is received, the binary sensor will briefly go ON and then immediately OFF.

# Example configuration entry
remote_receiver:
  pin: GPIO32
  dump: all

binary_sensor:
  - platform: remote_receiver
    name: "Panasonic Remote Input"
    panasonic:
      address: 0x4004
      command: 0x100BCBD
Configuration variables:
name (Required, string): The name for the binary sensor.

id (Optional, ID): Manually specify the ID used for code generation.

All other options from Binary Sensor.